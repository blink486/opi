import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:moodclicks/screens/scrollcards.dart';
import 'package:moodclicks/services/createinitsurvey.dart';
import 'package:moodclicks/services/signup.dart';

class Qcards extends StatefulWidget {
  const Qcards({Key? key}) : super(key: key);

  @override
  _QcardsState createState() => _QcardsState();
}

class _QcardsState extends State<Qcards> {
  late Survey surveyLocal;
  late List<Survey> srv;
  final loggedInUser = FirebaseAuth.instance.currentUser!.uid.toString();

  TextEditingController srvName = new TextEditingController();
  TextEditingController srvDescription = new TextEditingController();
  // TextEditingController id = new TextEditingController();
  // TextEditingController userId = new TextEditingController();
  @override
  Widget build(BuildContext context) {
    String emojiHeart = '\u2764';
    // Emoji smile = Emoji.fromJson(json)   ('Grinning Face');
    return Scaffold(
      appBar: AppBar(
        title: Text("Menu Page 1 " /*+ widget.searchstr*/),
        // actions: <Widget>[HomeNav()],
      ),
      body: SingleChildScrollView(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          children: [
            Padding(
              padding: const EdgeInsets.all(54.0),
              child: TextButton(
                onPressed: () {
                  Navigator.push(
                      context,
                      MaterialPageRoute(
                          // builder: (BuildContext context) => PageViewDemo())); //Go Sample Cards
                          builder: (BuildContext context) => SignUp()));
                  // print('${smile.name}');
                },
                child: Text(
                  emojiHeart +
                      " Heart This Co. Click To Sign up and Create your first Survey :" +
                      emojiHeart,
                  style: TextStyle(fontSize: 19),
                ),
                // ),
              ),
            ),
            SizedBox(
              height: 10,
            ),
            Padding(
              padding: const EdgeInsets.all(54.0),
              child: TextButton(
                onPressed: () {
                  Navigator.push(
                      context,
                      MaterialPageRoute(
                          builder: (BuildContext context) =>
                              PageViewDemo())); //Go Sample Cards
                  // builder: (BuildContext context) => SignUp()));
                  // print('${smile.name}');
                },
                child: Text(
                  emojiHeart +
                      " Heart This Co. View Sample Survey :" +
                      emojiHeart,
                  style: TextStyle(fontSize: 10),
                ),
                // ),
              ),
            ),
            TextFormField(
              controller: srvName,
              decoration: InputDecoration(hintText: "name"),
            ),
            SizedBox(height: 10.0),
            TextFormField(
              controller: srvDescription,
              decoration: InputDecoration(hintText: "Description"),
            ),
            TextButton(
              onPressed: () {
                Navigator.push(
                    context,
                    MaterialPageRoute(
                        // builder: (BuildContext context) => PageViewDemo())); //Go Sample Cards
                        builder: (BuildContext context) => SignUp()));
                // print('${smile.name}');
              },
              child: Text(
                emojiHeart + " Heart Tfirst Survey :" + emojiHeart,
                style: TextStyle(fontSize: 24),
              ),
              // ),
            ),
            SizedBox(
              height: 10,
            ),
            TextButton(
              style: TextButton.styleFrom(primary: Colors.red),
              onPressed: () async {
                // Generate a reference to a new location and add some data using push()
                var newPostRef = Navigator.push;
// Get the unique ID generated by push() by accessing its key
// var postID = newPostRef.toString();
                final mySrv = Survey(
                    name: srvName.text, description: srvDescription.text);
                // createSurvey();
                Map<String, dynamic> data = {
                  "f00user": loggedInUser,
                  // "f01name": srvName.text,
                  // "f02description": srvDescription.text
                  // "f03srvId": newPostRef.toString()
                  "f01name": mySrv.name,
                  "f02description": mySrv.description
                };
                FirebaseFirestore.instance.collection("survey").add(data);
                print(srvDescription.toString());
                print('\u{2764}');
                print(String.fromCharCode(0xdd25));
                print(String.fromCharCode(0xdd25));
                print(
                  mySrv.description,
                );
              },
              child: Text("Submit New Survey"),
            ),
          ],
        ),
      ),
    );
  }

//   void createSurvey() {
//     Survey _newsurvey =         Survey(name: srvName.text, description: srvDescription.text);
//     print(srvDescription);
//   }
}
